DECLARE
    CURSOR c_especialidad IS
        SELECT
            esp_id,
            nombre
        FROM especialidad;
    --Segundo cursor que almacena las atenciones  
    CURSOR c_atencion(p_esp NUMBER) IS
        SELECT
            ate_id,
            fecha_atencion,
            costo,
            pac_run
        FROM atencion
        WHERE esp_id = p_esp;

    total_especialistas NUMBER;
    --almacena la excepcion
    error_negocio EXCEPTION;
    --almacena la edad del paciente
    edad NUMBER;
    porcentaje porc_descto_3ra_edad.porcentaje_descto%TYPE;
    --almacena el error
    msg_oracle error_proceso.descripcion_oracle%TYPE;
BEGIN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE resumen_especialidad';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE resumen_atenciones';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE error_proceso';
    --procesa las especialidades
    FOR reg_especialidad IN c_especialidad LOOP
        --obtiene el total de especialistas
        SELECT 
            COUNT(med_run)
        INTO total_especialistas
        FROM especialidad_medico
        WHERE esp_id = reg_especialidad.esp_id;
        --Inserto registro en la tabla resultado
        INSERT INTO resumen_especialidad VALUES(
        reg_especialidad.esp_id,
        reg_especialidad.nombre,
        total_especialistas
        );
        --verifica el cumplimiento de la regla de negocio
        BEGIN
            IF total_especialistas < 2 THEN
                RAISE error_negocio;
            END IF;
            
            EXCEPTION
            WHEN error_negocio THEN
               INSERT INTO error_proceso VALUES(
               SEQ_ERROR.nextval,'No cumple minimo de especialistas','ERROR DE NEGOCIO', USER
               );
        END;
        --ciclo para las atenciones
        FOR reg_atencion IN c_atencion(reg_especialidad.esp_id)LOOP
            --dato de la edad
            SELECT
                TRUNC(MONTHS_BETWEEN(SYSDATE,fecha_nacimiento)/12)
            INTO edad
            FROM paciente
            WHERE pac_run = reg_atencion.pac_run;
        BEGIN
            --buscar % 
            SELECT
                porcentaje_descto
            INTO porcentaje
            FROM porc_descto_3ra_edad
            WHERE edad BETWEEN anno_ini AND anno_ter;
            EXCEPTION
            WHEN NO_DATA_FOUND THEN
                porcentaje := 0;
                msg_oracle := SQLERRM;
                INSERT INTO error_proceso VALUES(
                SEQ_ERROR.nextval,'No existe porcentaje',msg_oracle, USER
                );
        END;
            --insertar en tabla de resultado
            INSERt INTO resumen_atenciones VALUES(
                reg_especialidad.esp_id,
                reg_atencion.ate_id,
                reg_atencion.fecha_atencion,
                reg_atencion.costo,
                porcentaje
            );
        END LOOP;
    END LOOP;
END;

--------------------------------------EJERCICIO 3----------------------------------------------------------
DECLARE
    CURSOR c_especialidad IS
        SELECT
            esp_id,
            nombre
        FROM especialidad;
    --Segundo cursor que almacena las atenciones  
    CURSOR c_atencion(p_esp NUMBER) IS
        SELECT
            ate_id,
            fecha_atencion,
            costo,
            pac_run
        FROM atencion
        WHERE esp_id = p_esp;

    total_especialistas NUMBER;
    --almacena la excepcion
    error_negocio EXCEPTION;
    --almacena la edad del paciente
    edad NUMBER;
    porcentaje porc_descto_3ra_edad.porcentaje_descto%TYPE;
    --almacena el error
    msg_oracle error_proceso.descripcion_oracle%TYPE;
    --define el VARRAY
    TYPE t_mensajes IS VARRAY(2)OF VARCHAR2(1000);
    mensajes t_mensajes;
BEGIN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE resumen_especialidad';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE resumen_atenciones';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE error_proceso';
    --almacena los mensajes
    mensajes := t_mensajes('No cumple minimo de especialistas','No existe porcentaje');
    --procesa las especialidades
    FOR reg_especialidad IN c_especialidad LOOP
        --obtiene el total de especialistas
        SELECT 
            COUNT(med_run)
        INTO total_especialistas
        FROM especialidad_medico
        WHERE esp_id = reg_especialidad.esp_id;
        --Inserto registro en la tabla resultado
        INSERT INTO resumen_especialidad VALUES(
        reg_especialidad.esp_id,
        reg_especialidad.nombre,
        total_especialistas
        );
        --verifica el cumplimiento de la regla de negocio
        BEGIN
            IF total_especialistas < 2 THEN
                RAISE error_negocio;
            END IF;
            
            EXCEPTION
            WHEN error_negocio THEN
               INSERT INTO error_proceso VALUES(
               SEQ_ERROR.nextval,mensajes(1),'ERROR DE NEGOCIO', USER
               );
        END;
        --ciclo para las atenciones
        FOR reg_atencion IN c_atencion(reg_especialidad.esp_id)LOOP
            --dato de la edad
            SELECT
                TRUNC(MONTHS_BETWEEN(SYSDATE,fecha_nacimiento)/12)
            INTO edad
            FROM paciente
            WHERE pac_run = reg_atencion.pac_run;
        BEGIN
            --buscar % 
            SELECT
                porcentaje_descto
            INTO porcentaje
            FROM porc_descto_3ra_edad
            WHERE edad BETWEEN anno_ini AND anno_ter;
            EXCEPTION
            WHEN NO_DATA_FOUND THEN
                porcentaje := 0;
                msg_oracle := SQLERRM;
                INSERT INTO error_proceso VALUES(
                SEQ_ERROR.nextval,mensajes(2),msg_oracle, USER
                );
        END;
            --insertar en tabla de resultado
            INSERt INTO resumen_atenciones VALUES(
                reg_especialidad.esp_id,
                reg_atencion.ate_id,
                reg_atencion.fecha_atencion,
                reg_atencion.costo,
                porcentaje
            );
        END LOOP;
    END LOOP;
END;
